{"version":3,"sources":["components/CalculatorDisplay.js","components/CalculatorButton.js","components/Calculator.js","components/App.js","serviceWorker.js","index.js"],"names":["CalculatorDisplay","primaryDisplay","_this$props","this","props","value","prevValue","op","forceDecimal","numZeroes","zeroes","i","concat","String","react_default","a","createElement","className","React","Component","CalculatorButton","onClick","text","Calculator","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","displayValue","currentOperation","hasDecimal","decimalPlaces","_this2","_this$state","components_CalculatorDisplay","components_CalculatorButton","clear","switchSign","switchToPercent","inputOperation","inputDigit","inputDecimal","calculate","digit","nextValue","_this$state2","setState","Math","pow","_this$state3","newPrev","Operations","_this$state4","newValue","✕","v1","v2","÷","+","-","App","components_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a506a17.chunk.js","sourcesContent":["import React from 'react';\n\nclass CalculatorDisplay extends React.Component {\n  render() {\n\n    const { value, prevValue, op, forceDecimal, numZeroes } = this.props;\n    var primaryDisplay;\n\n    if (forceDecimal) {\n      var zeroes = \"\";\n      for (var i = 0; i < numZeroes; i++) {\n        zeroes = zeroes.concat(\"0\");\n      }\n      primaryDisplay = value + \".\" + zeroes;\n    } else {\n      primaryDisplay = String(value);\n    }\n\n    return (\n      <div className=\"display-panel\">\n        <div className=\"secondary-display\">\n          {prevValue}{op}\n        </div>\n        <div className=\"primary-display\">\n          {primaryDisplay}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CalculatorDisplay;","import React from 'react';\n\nclass CalculatorButton extends React.Component {\n  render() {\n    return (\n      <button\n        className={this.props.className}\n        onClick={this.props.onClick}\n      >\n        {this.props.text}\n      </button>\n    );\n  }\n}\n\nexport default CalculatorButton;","import React from 'react';\nimport CalculatorDisplay from './CalculatorDisplay';\nimport CalculatorButton from './CalculatorButton';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayValue: 0,\n      prevValue: null,\n      currentOperation: null,\n      hasDecimal: false,\n      forceDecimal: false,\n      decimalPlaces: 0\n    };\n  }\n\n  render() {\n    const { displayValue, prevValue, currentOperation, forceDecimal, decimalPlaces } = this.state;\n    return (\n      <div className=\"calculator\">\n        <CalculatorDisplay\n          value={displayValue}\n          prevValue={prevValue}\n          op={currentOperation}\n          forceDecimal={forceDecimal}\n          numZeroes={decimalPlaces}\n        />\n        <div className=\"button-panel\">\n          <CalculatorButton className=\"key fn-key\" text=\"AC\" onClick={() => this.clear()} />\n          <CalculatorButton className=\"key fn-key\" text=\"±\" onClick={() => this.switchSign()} />\n          <CalculatorButton className=\"key fn-key\" text=\"%\" onClick={() => this.switchToPercent()} />\n          <CalculatorButton className=\"key op-key\" text=\"÷\" onClick={() => this.inputOperation('÷')} />\n          <br />\n          <CalculatorButton className=\"key nm-key\" text=\"7\" onClick={() => this.inputDigit(7)} />\n          <CalculatorButton className=\"key nm-key\" text=\"8\" onClick={() => this.inputDigit(8)} />\n          <CalculatorButton className=\"key nm-key\" text=\"9\" onClick={() => this.inputDigit(9)} />\n          <CalculatorButton className=\"key op-key\" text=\"✕\" onClick={() => this.inputOperation('✕')} />\n          <br />\n          <CalculatorButton className=\"key nm-key\" text=\"4\" onClick={() => this.inputDigit(4)} />\n          <CalculatorButton className=\"key nm-key\" text=\"5\" onClick={() => this.inputDigit(5)} />\n          <CalculatorButton className=\"key nm-key\" text=\"6\" onClick={() => this.inputDigit(6)} />\n          <CalculatorButton className=\"key op-key\" text=\"-\" onClick={() => this.inputOperation('-')} />\n          <br />\n          <CalculatorButton className=\"key nm-key\" text=\"1\" onClick={() => this.inputDigit(1)} />\n          <CalculatorButton className=\"key nm-key\" text=\"2\" onClick={() => this.inputDigit(2)} />\n          <CalculatorButton className=\"key nm-key\" text=\"3\" onClick={() => this.inputDigit(3)} />\n          <CalculatorButton className=\"key op-key\" text=\"+\" onClick={() => this.inputOperation('+')} />\n          <br />\n          <CalculatorButton className=\"key nm-key zero-key\" text=\"0\" onClick={() => this.inputDigit(0)} />\n          <CalculatorButton className=\"key nm-key\" text=\".\" onClick={() => this.inputDecimal()} />\n          <CalculatorButton className=\"key op-key\" text=\"=\" onClick={() => this.calculate()} />\n        </div>\n      </div>\n    );\n  }\n\n  inputDigit(digit) {\n    const { displayValue, decimalPlaces, hasDecimal } = this.state;\n    var nextValue;\n    if (hasDecimal) {\n      if (digit === 0) {\n        this.setState({\n          forceDecimal: true,\n          decimalPlaces: decimalPlaces + 1\n        });\n      } else {\n        if (displayValue >= 0) {\n          nextValue = displayValue + (digit / (Math.pow(10, decimalPlaces + 1)));\n        } else {\n          nextValue = displayValue - (digit / (Math.pow(10, decimalPlaces + 1)));\n        }\n        this.setState({\n          displayValue: nextValue,\n          forceDecimal: false,\n          decimalPlaces: decimalPlaces + 1\n        });\n      }\n    } else {\n      nextValue = this.state.displayValue;\n      nextValue = nextValue * 10 + digit;\n      this.setState({\n        displayValue: nextValue\n      });\n    }\n  }\n\n  inputOperation(op) {\n    const { displayValue, prevValue, currentOperation } = this.state;\n    var newPrev = currentOperation\n      ? Operations[currentOperation](prevValue, displayValue)\n      : displayValue;\n    this.setState({\n      displayValue: 0,\n      prevValue: newPrev,\n      currentOperation: op,\n      forceDecimal: false,\n      hasDecimal: false,\n      decimalPlaces: 0,\n    });\n  }\n\n  inputDecimal() {\n    this.setState({\n      forceDecimal: true,\n      hasDecimal: true\n    });\n  }\n\n  switchSign() {\n    this.setState({\n      displayValue: -this.state.displayValue\n    });\n  }\n\n  switchToPercent() {\n    this.setState({\n      displayValue: this.state.displayValue / 100\n    });\n  }\n\n  calculate() {\n    const { displayValue, prevValue, currentOperation } = this.state;\n    if (!currentOperation) return;\n    const newValue = Operations[currentOperation](prevValue, displayValue);\n    this.setState({\n      displayValue: newValue,\n      prevValue: null,\n      currentOperation: null,\n      forceDecimal: false,\n      hasDecimal: false,\n      decimalPlaces: 0,\n    });\n  }\n\n  clear() {\n    this.setState({\n      displayValue: 0,\n      currentOperation: null,\n      prevValue: null,\n      forceDecimal: false,\n      hasDecimal: false,\n      decimalPlaces: 0,\n    });\n  }\n}\n\nconst Operations = {\n  '✕': (v1, v2) => v1 * v2,\n  '÷': (v1, v2) => v1 / v2,\n  '+': (v1, v2) => v1 + v2,\n  '-': (v1, v2) => v1 - v2,\n}\n\nexport default Calculator;\n","import React from 'react';\nimport Calculator from './Calculator';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Calculator />\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}